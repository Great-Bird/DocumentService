"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88],{68499:e=>{e.exports=JSON.parse('{"functions":[{"name":"log","desc":"An implementation of logging. It is recommended to run this after any important update to your data via hooks.\\n\\nIt will log each update call, a timestamp, and the values changed, for a set period.","params":[{"name":"event","desc":"","lua_type":"Types.PostHookEvent"},{"name":"logDataStore","desc":"","lua_type":"DataStore"},{"name":"valuesToLog","desc":"","lua_type":"{ string }"},{"name":"dependencies","desc":"","lua_type":"{ string }"},{"name":"result","desc":"","lua_type":"Types.Result<T>\\n"}],"returns":[],"function_type":"static","source":{"line":43,"path":"src/Util.luau"}},{"name":"uuid","desc":"Luau uuid implementation\\n\\nBased off of https://gist.github.com/jrus/3197011","params":[],"returns":[{"desc":"","lua_type":"string"},{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":57,"path":"src/Util.luau"}},{"name":"updateAsync","desc":"A wrapper for UpdateAsync that retries with exponential backoff and prevents use of the throttle \'queue\'","params":[{"name":"dataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"},{"name":"transform","desc":"","lua_type":"(any, DataStoreKeyInfo) -> (any, { number }?, {}?)\\n"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"unknown"},{"desc":"","lua_type":"DataStoreKeyInfo"}],"function_type":"static","source":{"line":70,"path":"src/Util.luau"}},{"name":"getAsync","desc":"A wrapper for GetAsync that retries with exponential backoff and prevents use of the throttle \'queue\'","params":[{"name":"dataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"unknown"},{"desc":"","lua_type":"DataStoreKeyInfo"}],"function_type":"static","source":{"line":88,"path":"src/Util.luau"}}],"properties":[],"types":[],"name":"Util","desc":"A collection of utility functions for DocumentService.","source":{"line":14,"path":"src/Util.luau"}}')}}]);