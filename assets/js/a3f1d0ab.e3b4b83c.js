"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[246],{67310:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new DocumentStore","params":[{"name":"dataStore","desc":"","lua_type":"The object returned by DataStoreService:GetDataStore()"},{"name":"check","desc":"","lua_type":"A type check function for your data, errors if types are invalid"},{"name":"default","desc":"","lua_type":"Default values, which are set if keys are empty"}],"returns":[{"desc":"","lua_type":"DocumentStore<T>\\n"}],"function_type":"static","source":{"line":31,"path":"src/DocumentService/DocumentStore.luau"}},{"name":"GetDocument","desc":"Creates and returns a new Document based on ","params":[{"name":"self","desc":"","lua_type":"DocumentStore<T>"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Document document created"}],"function_type":"static","source":{"line":46,"path":"src/DocumentService/DocumentStore.luau"}},{"name":"isDocumentStore","desc":"Checks whether a metatable passed is a DocumentStore","params":[{"name":"instance","desc":"","lua_type":"metatable"}],"returns":[{"desc":"","lua_type":"is it a DocumentStore"}],"function_type":"static","source":{"line":56,"path":"src/DocumentService/DocumentStore.luau"}}],"properties":[],"types":[],"name":"DocumentStore","desc":"A struct that holds information about all Documents within a DataStore and provides a less\\nrepetitive way of instantiating documents.","source":{"line":12,"path":"src/DocumentService/DocumentStore.luau"}}')}}]);