"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},24948:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(87462),r=(n(67294),n(3905));const a={},i="DocumentService - A powerful, schematised Roblox datastore library",l={type:"mdx",permalink:"/DocumentService/",source:"@site/pages/index.md",title:"DocumentService - A powerful, schematised Roblox datastore library",description:"DocumentService is a fully strictly typed Luau library for saving data with Roblox DataStores.",frontMatter:{}},s=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Method 1: Wally",id:"method-1-wally",level:3},{value:"Method 2: Manual",id:"method-2-manual",level:3},{value:"Long-term goals",id:"long-term-goals",level:2},{value:"Inspiration",id:"inspiration",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Contact",id:"contact",level:2}],u={toc:s},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"documentservice---a-powerful-schematised-roblox-datastore-library"},"DocumentService - A powerful, schematised Roblox datastore library"),(0,r.kt)("p",null,"DocumentService is a fully strictly typed Luau library for saving data with Roblox DataStores.\nIt can be used for sesssion-locked data, such as player data, or for non-session-locked data, like\nshared groups or houses."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://anthony0br.github.io/DocumentService/docs/intro"},"docs")," for more information."),(0,r.kt)("p",null,"This is a new release and, although it has been thoroughly unit tested, it hasn't yet been used\nin a live production game - as with any open source software, use it at your own risk! I am\nworking on adding it to my game, so this will not be a concern for too long."),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fully strictly typed. This means you get full intellisense and typechecking on your data,\nand on every API method, including possible errors for each method."),(0,r.kt)("li",{parentName:"ul"},"Superior Rust-inspired error handling, with each Result for each method\nproviding unique intellisense on which errors you need to handle."),(0,r.kt)("li",{parentName:"ul"},"Immutable cache and autosaves - preventing bugs caused by updates interfering with eachother."),(0,r.kt)("li",{parentName:"ul"},"Migrations, inspired by nezuo's Lapis."),(0,r.kt)("li",{parentName:"ul"},"Validate your data with support for runtime and static typechecking."),(0,r.kt)("li",{parentName:"ul"},"Documents can be session-locked, or not (to allow multi-server editing)."),(0,r.kt)("li",{parentName:"ul"},"Run hooks before and after operations, e.g. logging."),(0,r.kt)("li",{parentName:"ul"},"Automatic retry with exponential backoff."),(0,r.kt)("li",{parentName:"ul"},"Migrate from no library, or another library if you're brave."),(0,r.kt)("li",{parentName:"ul"},"Checks your data can be stored in JSON to avoid silent errors."),(0,r.kt)("li",{parentName:"ul"},"Simple API that follows SOLID principles: session-locking a document simply extends the API.\nFor example, in ProfileService you need to provide a lockedHandler function, which changes the\nbehaviour of the method to open a Profile, but in DocumentService you can just use the\nwith ",(0,r.kt)("inlineCode",{parentName:"li"},":IsWriteAvailable")," and ",(0,r.kt)("inlineCode",{parentName:"li"},":Steal")," methods if you need them."),(0,r.kt)("li",{parentName:"ul"},"Maintainable, strictly typed source code, that is actively maintained."),(0,r.kt)("li",{parentName:"ul"},"No dependencies (like Promise). Use whatever abstractions you like, and install easily.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"method-1-wally"},"Method 1: Wally"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},'DocumentService = "anthony0br/documentservice@1.1.0')," to your ",(0,r.kt)("inlineCode",{parentName:"p"},"wally.toml"),"."),(0,r.kt)("h3",{id:"method-2-manual"},"Method 2: Manual"),(0,r.kt)("p",null,"DocumentService has no dependencies so you can just copy and paste the contents of\n",(0,r.kt)("inlineCode",{parentName:"p"},"target/roblox")," into your project."),(0,r.kt)("h2",{id:"long-term-goals"},"Long-term goals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ACID transactions involving multiple Documents. Please get in touch if you can help with this!"),(0,r.kt)("li",{parentName:"ul"},"See the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/anthony0br/DocumentService/issues"},"issues")," page to discuss ways to make DocumentService better!")),(0,r.kt)("h2",{id:"inspiration"},"Inspiration"),(0,r.kt)("p",null,"This library takes inspiration from Lapis, ProfileService, keyForm, and kampfkarren's blog.\nThese are all great projects but didn't meet my needs in some way."),(0,r.kt)("h2",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"Contributions are accepted. Your contributions must run in Lune directly from src and, when compiled by darklua to target/roblox, in Roblox. You should use moonwave to update/generate documentation."),(0,r.kt)("p",null,"To build for Roblox:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install necessary tools (see aftman.toml)."),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"rojo sourcemap source.project.json -o sourcemap.json"),". It is necessary to generate a sourcemap of the src folder so darklua can convert our requires."),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"darklua process src target/roblox"),".")),(0,r.kt)("h2",{id:"contact"},"Contact"),(0,r.kt)("p",null,"The best way to get in touch is to ping me in the thread in the Roblox OSS discord, or create an issue."))}p.isMDXComponent=!0}}]);