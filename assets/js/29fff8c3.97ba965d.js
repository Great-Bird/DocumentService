"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[211],{86095:e=>{e.exports=JSON.parse('{"functions":[{"name":"assertStorable","desc":"Errors if the data passed is not storable in JSON\\n\\nRejects:\\n\\tNaN (all numbers must equal themselves)\\n\\tMixed table index types\\n\\tNon sequential tables indexed by numbers\\n\\tNon-string or number table indexes\\n\\tCyclic tables\\n\\ttype(value) == \\"userdata\\"\\n\\tFunctions\\n\\tMetatables\\n\\tThreads\\n\\tVectors","params":[{"name":"data","desc":"","lua_type":"unknown"}],"returns":[],"function_type":"static","source":{"line":54,"path":"src/SaveUtil.luau"}},{"name":"uuid","desc":"Luau uuid implementation\\n\\nBased off of https://gist.github.com/jrus/3197011","params":[],"returns":[{"desc":"","lua_type":"string"},{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":132,"path":"src/SaveUtil.luau"}},{"name":"updateAsync","desc":"A wrapper for UpdateAsync that retries with exponential backoff and prevents use of the throttle \'queue\'","params":[{"name":"transform","desc":"","lua_type":"(any, DataStoreKeyInfo) -> (any, { number }?, {}?)"},{"name":"dataStore","desc":"","lua_type":"GlobalDataStore"},{"name":"key","desc":"","lua_type":"string\\n"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"any"},{"desc":"","lua_type":"DataStoreKeyInfo"}],"function_type":"static","yields":true,"source":{"line":147,"path":"src/SaveUtil.luau"}},{"name":"getAsync","desc":"A wrapper for GetAsync that retries with exponential backoff and prevents use of the throttle \'queue\'","params":[{"name":"dataStore","desc":"","lua_type":"GlobalDataStore"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"any"},{"desc":"","lua_type":"DataStoreKeyInfo"}],"function_type":"static","yields":true,"source":{"line":168,"path":"src/SaveUtil.luau"}},{"name":"removeAsync","desc":"A wrapper for RemoveAsync","params":[{"name":"dataStore","desc":"","lua_type":"GlobalDataStore"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean\\n"}],"function_type":"static","yields":true,"source":{"line":190,"path":"src/SaveUtil.luau"}}],"properties":[],"types":[],"name":"SaveUtil","desc":"A collection of utility functions for handling datastores.\\n\\nIf you need to access any datastores directly while using DocumentService,\\nit is recommended you use these functions or similar implementations.","source":{"line":21,"path":"src/SaveUtil.luau"}}')}}]);