"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{57159:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"PreHookEvent","desc":"Note that Update will run on any operation that saves the datastore e.g. :Save()","lua_type":"\\"Open\\" | \\"Close\\" | \\"Update\\" | \\"Read\\"","source":{"line":10,"path":"src/Types.luau"}},{"name":"PostHookEvent","desc":"Note that Update will run on any operation that saves the datastore e.g. :Save()","lua_type":"\\"Open\\" | \\"Close\\" | \\"Update\\" | \\"Read\\"","source":{"line":19,"path":"src/Types.luau"}},{"name":"FailReason","desc":"","lua_type":"\\"RobloxAPIFail\\" | \\"InvalidDataNotHandled\\" | \\"SessionLocked\\" | \\"MigrationFailed\\"","source":{"line":26,"path":"src/Types.luau"}},{"name":"Result<T>","desc":"","lua_type":"({ success: true, data: T } | { success: false, failReason: FailReason, errorMessage: string, data: nil })","source":{"line":33,"path":"src/Types.luau"}},{"name":"Migrations<T>","desc":"This should be a sequential array starting at 1\\n\\nData format version start at 0, and the current version is the length of this array.\\nFor example, [1] migrates data at format version 0 to format version 1.","lua_type":"{ [number]: (data: unknown) -> unknown }","source":{"line":55,"path":"src/Types.luau"}}],"name":"DocumentService","desc":"Namespace containing public classes and types for DocumentService.\\n\\nContains the classes `DocumentService.DocumentStore` and `DocumentService.Util`.\\n\\nExample\\n```lua\\n\\tlocal DocumentStore = require(path/to/documentservice).DocumentStore\\n\\tlocal store = DocumentStore.new(...)\\n```","source":{"line":32,"path":"src/init.luau"}}')}}]);