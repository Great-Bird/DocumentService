"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,y=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(y,i(i({ref:t},c),{},{components:r})):n.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},76647:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const a={},i="DocumentService - A powerful Roblox datastore library",l={type:"mdx",permalink:"/DocumentService/",source:"@site/pages/index.md",title:"DocumentService - A powerful Roblox datastore library",description:"DocumentService is a fully strictly typed Luau library for saving data with Roblox DataStores.",frontMatter:{}},u=[{value:"Features",id:"features",level:2},{value:"Long-term goals",id:"long-term-goals",level:2},{value:"Inspiration",id:"inspiration",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Contact",id:"contact",level:2}],s={toc:u},c="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"documentservice---a-powerful-roblox-datastore-library"},"DocumentService - A powerful Roblox datastore library"),(0,o.kt)("p",null,"DocumentService is a fully strictly typed Luau library for saving data with Roblox DataStores."),(0,o.kt)("p",null,"DocumentService provides a DataStore abstraction, DocumentStore, which holds data about entities within Documents."),(0,o.kt)("p",null,"This project is currently in its early stages and should not be used in production."),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fully strictly typed: data is typed (intellisense and typechecking on data you read from DataStores!), and the whole library is written in --!strict."),(0,o.kt)("li",{parentName:"ul"},"Immutable cache and autosaves."),(0,o.kt)("li",{parentName:"ul"},"Migrations, inspired by Lapis. (If you're used to :Reconcile, you can do this with migrations)."),(0,o.kt)("li",{parentName:"ul"},"Data validation - use any runtime type checker for your data, and use the static types!"),(0,o.kt)("li",{parentName:"ul"},"Support for both session-locking and multi-server editing (not simultaneously)"),(0,o.kt)("li",{parentName:"ul"},"Run hooks before and after operations, e.g. logging."),(0,o.kt)("li",{parentName:"ul"},"Automatic retry with exponential backoff."),(0,o.kt)("li",{parentName:"ul"},"Migrate from no library, or another library if you're brave."),(0,o.kt)("li",{parentName:"ul"},"Checks your data can be stored in JSON to avoid silent errors."),(0,o.kt)("li",{parentName:"ul"},"No dependencies or complicated APIs like Promises. Methods yield, and you can wrap them in any coroutine abstraction you like.")),(0,o.kt)("h2",{id:"long-term-goals"},"Long-term goals"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ACID transactions involving multiple Documents. Please get in touch if you can help with this!")),(0,o.kt)("h2",{id:"inspiration"},"Inspiration"),(0,o.kt)("p",null,"This library takes inspiration from Lapis, ProfileService, keyForm, and kampfkarren's blog.\nThese are all great projects but didn't meet my needs in some way."),(0,o.kt)("h2",{id:"contributing"},"Contributing"),(0,o.kt)("p",null,"Contributions are accepted. Your contributions must run in Lune directly from src and, when compiled by darklua to target/roblox, in Roblox. You should use moonwave to update/generate documentation."),(0,o.kt)("p",null,"To build for Roblox:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install necessary tools (see aftman.toml)."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"rojo sourcemap source.project.json -o sourcemap.json"),". It is necessary to generate a sourcemap of the src folder so darklua can convert our requires."),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"darklua process src target/roblox"),".")),(0,o.kt)("h2",{id:"contact"},"Contact"),(0,o.kt)("p",null,"The best way to get in touch is to ping me in the thread in the Roblox OSS discord, or create an issue."))}p.isMDXComponent=!0}}]);